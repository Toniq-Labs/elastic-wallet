diff --git a/node_modules/@dfinity/identity/lib/cjs/identity/delegation.js b/node_modules/@dfinity/identity/lib/cjs/identity/delegation.js
index 553e9e9..ea58cc7 100644
--- a/node_modules/@dfinity/identity/lib/cjs/identity/delegation.js
+++ b/node_modules/@dfinity/identity/lib/cjs/identity/delegation.js
@@ -162,7 +162,7 @@ class DelegationChain {
                 throw new Error('Invalid targets.');
             }
             return {
-                delegation: new Delegation(_parseBlob(pubkey), BigInt(`0x${expiration}`), // expiration in JSON is an hexa string (See toJSON() below).
+                delegation: new Delegation(_parseBlob(pubkey), BigInt('0x' + expiration), // expiration in JSON is an hexa string (See toJSON() below).
                 targets &&
                     targets.map((t) => {
                         if (typeof t !== 'string') {
diff --git a/node_modules/@dfinity/identity/lib/esm/identity/delegation.js b/node_modules/@dfinity/identity/lib/esm/identity/delegation.js
index 56fc35a..416532f 100644
--- a/node_modules/@dfinity/identity/lib/esm/identity/delegation.js
+++ b/node_modules/@dfinity/identity/lib/esm/identity/delegation.js
@@ -135,7 +135,7 @@ export class DelegationChain {
                 throw new Error('Invalid targets.');
             }
             return {
-                delegation: new Delegation(_parseBlob(pubkey), BigInt(`0x${expiration}`), // expiration in JSON is an hexa string (See toJSON() below).
+                delegation: new Delegation(_parseBlob(pubkey), BigInt('0x' + expiration), // expiration in JSON is an hexa string (See toJSON() below).
                 targets &&
                     targets.map((t) => {
                         if (typeof t !== 'string') {
